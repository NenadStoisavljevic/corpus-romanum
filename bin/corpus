#!/bin/sh

# Requires Whitacker's Words (Latin-English dictionary), you can
# find it at https://github.com/mk270/whitakers-words.

corpusdir="${XDG_DATA_HOME:-$HOME/.local/share}/corpus"

# A list of substitutes for the parts of speech.
subs="ADJ:A
ADV:D
CONJ:C
INTERJ:I
NUM:M
PREP:P
PRON:O
SUFFIX:S
SUPINE:U
TACKON:T
VPAR:R"

getlatin() { echo "Enter the full link of the text:"; read -r link
	echo "Enter the title of the text:"; read -r title
	esctitle="$(echo "$title" | iconv -cf UTF-8 -t ASCII//TRANSLIT | tr -d '[:punct:]' | tr '[:upper:]' '[:lower:]' | tr ' ' '-' | sed "s/-\+/-/g;s/\(^-\|-\$\)//g")"

	curl -sf "$link" > "$corpusdir/$esctitle" || exit 1
	sed -i 's/<[^>]*>//g
	s/&nbsp;//g
	s/\t//g
	/./,/^$/!d
	s/  \+/ /g' "$corpusdir/$esctitle"

	tagfile "$corpusdir/$esctitle"
}

sub() { for x in $1; do
		letter=$(echo "$subs" | grep -w "$x" | cut -d ':' -f 2)
		[ -z "$letter" ] && labels="${labels}$x" || labels="${labels}$letter"
	done; printf "%s\n" "$labels"
}

tagfile() { output="$1-tagged" && echo "Tagging \"$1\"..."
	while read -r line; do
		[ -z "$line" ] && printf "\n" >> "$output" || last=${line##* } && total=$(echo "$line" | grep -ow "$last" | wc -w) && count=0
		for word in $line; do
			[ "$word" = "$last" ] && count=$((count+1))

			pos=$(words "$word" | grep -Ev '(;|])' | awk '$2~/[A-Z]/{print $2}' | sort -u)
			letters=$(sub "$pos")

			if [ "$total" = "$count" ] && [ -z "$letters" ]; then
				printf "%s\n" "$word" >> "$output"
			elif [ "$total" = "$count" ]; then
				printf "%s//%s\n" "$word" "$letters" >> "$output"
			elif [ -z "$letters" ]; then
				printf "%s " "$word" >> "$output"
			else
				printf "%s//%s " "$word" "$letters" >> "$output"
			fi
		done
	done < "$1"
}

tagword() { for word in $1; do
		pos=$(words "$word" | grep -Ev '(;|])' | awk '$2~/[A-Z]/{print $2}' | sort -u)
		letters=$(sub "$pos")
		if [ -z "$letters" ]; then
			echo "$word is not a valid word."
		else
			printf "%s//%s\n" "$word" "$letters"
		fi
	done
}

checkfile() { output="$1-tagged"
	if [ -e "$output" ]; then
		echo "The file \"$output\" already exists, would you like to remove it? [yN]"; read -r choice
		echo "$choice" | grep -iq "^y$" &&
			rm -f "$output"
	fi
}


getfiles() { files=$(find "$corpusdir" -type f -printf "%f\n" | sort) ;}

list() { getfiles && [ -n "$files" ] && echo "$files" || exit 1 ;}

info() { cat << EOF
corpus: grammatical tagger for Latin text documents

Main options:
  -t	Tag file
  -w	Tag word(s) (recommended to be in double quotes)
  -d	Download Latin text from The Latin Library
  -l	List files stored in the corpus
EOF
}

while getopts "t:w:dl" o; do case "${o}" in
	t) checkfile "$OPTARG" ; tagfile "$OPTARG" || exit 1 ;;
	w) tagword "$OPTARG" || exit 1 ;;
	d) getlatin || exit 1 ;;
	l) list || exit 1 ;;
	*) info ; exit 1 ;;
esac done
